"""
출력을 할 때는 print()를 이용하여 출력을 진행할 수 있다.
print()는 변수나 상수를 매개변수로 입력받아 이를 표준 출력으로 출력한다.
print()는 각 변수를 콤마(,) 로 구분하여 매개변수로 넣을 수 있는데, 이 경우 각 변수가 띄어쓰기로 구분되어 출력된다.
"""

#출력할 변수들

a = 1
b = 2

print(a, b)

"""
print()는 기본적으로 출력 이후에 줄 바꿈을 수행한다.
따라서 print()를 사용할 때마다 줄이 변경된다고 볼 수 있다.
"""

# 출력 줄 바꿈 ㅇ몌시

# 출력할 변수들
a = 1
b = 2

print(a)
print(b)

"""
일부 문제의 경우 출력할 때 문자열과 수를 함께 출력해야 되는 경우가 있다.
이 경우 단순히 연산자(+)를 이용하여 문자열과 수를 더하면 오류가 발생한다.
"""

# 출력 시 오류가 발생하는 소스코드 예시

# 출력할 변수들
answer = 7

# print("정답은 " + answer + "입니다.") # 오류가 발생하는 코드

"""
str()함수를 이용하여 출력하고자 하는 변수 데이터를 문자열로 바꾸어주거나, 혹은 콤마(,)를 기준으로 구분하여 출력하면 된다.
"""

# 변수를 문자열로 바꾸어 출력하는 소스코드 예시

# 출력할 변수들
answer = 7

print("정답은 " + str(answer) + "입니다.")

# 각 변수를 콤마(,)로 구분하여 출력하는 소스코드 예시

# 출력할 변수들
answer = 7

print("정답은", answer, "입니다.")

"""
각 변수를 콤마로 구분하여 출력하는 경우, 변수의 값 사이에 의도치 않은 공백이 삽입될 수 있다는 점을 신경 써야한다.
"""

"""
Python3.6 이상의 버전부터 f-string문법을 사용할 수 있다.
f-string은 문자열 앞에 접두사 'f'를 붙임으로써 사용할 수 있는데, f-string을 이용하면 단순히 중괄호({}) 안에 변수를 넣음으로써,
자료형의 변환 없이도 간단히 문자열과 정수를 함께 넣을 수 있다.
"""

answer = 7
print(f"정답은 {answer}입니다.")